{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","useQueryParam","key","defaultValue","useState","param","URLSearchParams","search","get","value","setValue","lazyValue","useRef","queued","useLayoutEffect","current","setTimeout","queryParams","set","history","replaceState","toString","handleKey","e","keyCode","preventDefault","target","blur","createLink","baseUrl","params","p","Object","entries","forEach","undefined","append","encodeQueryParams","calculateShade","rad","rot","x","Math","abs","sin","min","toFixed","Logo","React","forwardRef","ref","height","outerColor","innerColor","arrowColor","leftShade","rightShade","onOuterColor","onArrowColor","className","xmlns","width","viewBox","onClick","d","style","fill","opacity","ColorPicker","label","color","setColor","colors","inputLabel","join","type","onKeyDown","onChange","border","borderFocus","bg","inputText","inputTextFocus","inputTextPlaceholder","inputBg","inputBgHover","inputBgFocus","placeholder","themes","bgButtons","bgNav","title","description","modeButtonText","modeButtonTextHover","resetButtonActive","resetButtonBg","resetButtonHover","resetButtonText","twitterButtonActive","twitterButtonBg","twitterButtonHover","twitterButtonText","inputTextPlaceHolder","openColorPicker","MouseEvent","view","bubbles","cancleable","dispatchEvent","App","localStorage","getItem","matchMedia","matches","mode","setMode","useEffect","mediaQuery","handleChange","addEventListener","removeEventListener","setItem","useDarkMode","setOuterColor","setArrowColor","logoRef","outerColorRef","arrowColorRef","mousePosition","setMousePosition","updateMousePosition","clientX","clientY","useMousePosition","windowX","windowY","size","setSize","handleResize","innerWidth","innerHeight","useWindowSize","y","rect","getBoundingClientRect","atan2","calculateAngle","signum","PI","editOuterColor","editArrowColor","aria-label","stroke","strokeLinecap","strokeLinejoin","strokeWidth","map","props","url","origin","pathname","twitterUrl","text","open","tweet","role","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c7b3424.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-mixed-operators */\n\nimport React, { useLayoutEffect, useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport * as serviceWorker from './serviceWorker'\n\nfunction useDarkMode() {\n  const preferDarkQuery = '(prefers-color-scheme: dark)'\n  const [mode, setMode] = React.useState(\n    () => window.localStorage.getItem('colorMode') || (window.matchMedia(preferDarkQuery).matches ? 'dark' : 'light')\n  )\n  React.useEffect(() => {\n    const mediaQuery = window.matchMedia(preferDarkQuery)\n    const handleChange = () => setMode(mediaQuery.matches ? 'dark' : 'light')\n    mediaQuery.addEventListener('change', handleChange)\n    return () => mediaQuery.removeEventListener('change', handleChange)\n  })\n  React.useEffect(() => window.localStorage.setItem('colorMode', mode))\n  return [mode, setMode]\n}\n\nfunction useMousePosition() {\n  const [mousePosition, setMousePosition] = useState([0, 0])\n  const updateMousePosition = (e) => setMousePosition([e.clientX, e.clientY])\n  useLayoutEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition)\n    return () => window.removeEventListener(\"mousemove\", updateMousePosition)\n  }, [])\n  return mousePosition\n}\n\n// custom hook that provides { width, height } of the window\nfunction useWindowSize() {\n  const [size, setSize] = useState({ width: 0, height: 0 })\n  useLayoutEffect(() => {\n    const handleResize = () => setSize({ width: window.innerWidth, height: window.innerHeight })\n    window.addEventListener(\"resize\", handleResize)\n    handleResize()\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, [])\n  return size\n}\n\n// Custom hook for reading/writing browser's location query parameters\nfunction useQueryParam(key, defaultValue) {\n  const [value, setValue] = useState(() => {\n    const param = new URLSearchParams(location.search).get(key)\n    return param === null ? defaultValue : param\n  })\n  const lazyValue = useRef(null) // prevents outdated value from being captured by arrow function below\n  const queued = useRef(false) // flood protection of browser history, 100 changes per 30 sec allowed\n  useLayoutEffect(() => {\n    lazyValue.current = value\n    if (!queued.current) {\n      queued.current = true\n      setTimeout(() => {\n        if (queued.current) {\n          const queryParams = new URLSearchParams(location.search)\n          queryParams.set(key, lazyValue.current)\n          history.replaceState(null, null, \"?\" + queryParams.toString())\n          queued.current = false\n        }\n      }, 500) // less often then 3 times per second\n    }\n  }, [key, value, lazyValue, queued])\n  return [value, setValue]\n}\n\n// input field helper for handling enter (13) and escape (27)\nfunction handleKey(e, setValue) {\n  if (e.keyCode === 13 || e.keyCode === 27) {\n    e.preventDefault()\n    e.target.blur()\n  }\n  if (e.keyCode === 13) {\n    setValue(e.target.value)\n  }\n}\n\nfunction encodeQueryParams(p) {\n  const queryParams = new URLSearchParams()\n  Object.entries(p).forEach(([key, value]) => value !== undefined && queryParams.append(key, value))\n  return queryParams\n}\n\nfunction createLink(baseUrl, params) {\n  return baseUrl + '?' + encodeQueryParams(params)\n}\n\nfunction tweet(outerColor, arrowColor) {\n  const text = `\\uD83D\\uDC85 I just played #BeautyChallengeTheGame\n\nFind my result & play it \\uD83D\\uDC49`\n  const url = createLink(location.origin + location.pathname, {'outer-color': outerColor, 'arrow-color': arrowColor})\n  const twitterUrl = createLink('https://twitter.com/intent/tweet', {\n    text,\n    url\n  })\n  window.open(twitterUrl, \"_blank\")\n}\n\nfunction calculateAngle(ref, x, y) {\n  const rect = ref.current && ref.current.getBoundingClientRect()\n  return rect && Math.atan2(x - rect.x - rect.width / 2, y - rect.y - rect.height / 1.6) || 0 // 1.6 ~ center y\n}\n\nfunction calculateShade(rad, rot) {\n  const x = Math.abs(Math.sin((rad + rot) / 2))\n  return Math.min(1, x * x * x + 0.5).toFixed(2) // x^3 to lower contrast, + 0.5 to increase light intensity\n}\n\nconst Logo = React.forwardRef(({height, outerColor, innerColor, arrowColor, leftShade, rightShade, onOuterColor, onArrowColor}, ref) => {\n  return (\n    <svg ref={ref} className=\"mx-auto max-w-xs\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height={height} viewBox=\"-1800 -3118 3600 3118\">\n      <path onClick={onArrowColor} d=\"M0-15e2v1e3L-866 0z\" style={{fill: arrowColor, opacity: leftShade}} />\n      <path onClick={onArrowColor} d=\"M0-15e2v1e3L866 0z\" style={{fill: arrowColor, opacity: rightShade}} />\n      <path d=\"M0-2118v618L-866 0h-357z\" style={{fill: innerColor, opacity: leftShade}} />\n      <path d=\"M0-2118v618L866 0h357z\" style={{fill: innerColor, opacity: rightShade}} />\n      <path onClick={onOuterColor} d=\"M0-3118v1e3L-1223 0h-577z\" style={{fill: outerColor, opacity: leftShade}} />\n      <path onClick={onOuterColor} d=\"M0-3118v1e3L1223 0h577z\" style={{fill: outerColor, opacity: rightShade}} />\n    </svg>\n  )\n})\n\nconst ColorPicker = React.forwardRef(({label, color, setColor, colors}, ref) => {\n  return (\n    <div className=\"flex flex-col\">\n      <fieldset>\n        <legend className={[\"block text-sm font-medium\", colors.inputLabel].join(' ')}>{label}</legend>\n        <div className=\"flex mt-1\">\n          <input ref={ref} type=\"color\" value={color} onKeyDown={(e) => handleKey(e, setColor)} onChange={(e) => setColor(e.target.value)} className={[\"mr-3 w-12 h-10 md:w-8 md:h-8 appearance-none outline-none rounded-md overflow-hidden border\", colors.border, colors.borderFocus, colors.bg].join(' ')} />\n          <input type=\"text\" value={color} onKeyDown={(e) => handleKey(e, setColor)} onChange={(e) => setColor(e.target.value)} className={[\"form-input w-full h-10 md:w-28 md:h-8 appearance-none outline-none rounded-md overflow-hidden border\", colors.border, colors.borderFocus, colors.inputText, colors.inputTextFocus, colors.inputTextPlaceholder, colors.inputBg, colors.inputBgHover, colors.inputBgFocus].join(' ')} placeholder=\"#rrggbb\" />\n        </div>\n      </fieldset>\n    </div>\n  )\n})\n\nconst initialOuterColor = '#7f7f7f'\nconst initialArrowColor = '#7f7f7f'\nconst themes = {\n  'dark': {\n    bg: 'bg-gray-900',\n    bgButtons: 'bg-gray-700',\n    bgNav: 'bg-gray-800',\n    border: 'border-gray-500',\n    borderFocus: 'focus:border-white',\n    title: 'text-white',\n    description: 'text-gray-300 ',\n    modeButtonText: 'text-gray-300',\n    modeButtonTextHover: 'hover:text-white',\n    resetButtonActive: 'active:bg-gray-700',\n    resetButtonBg: 'bg-gray-600',\n    resetButtonHover: 'hover:bg-gray-500',\n    resetButtonText: 'text-white',\n    twitterButtonActive: 'active:bg-blue-700',\n    twitterButtonBg: 'bg-blue-600',\n    twitterButtonHover: 'hover:bg-blue-500',\n    twitterButtonText: 'text-white',\n    inputBg: 'bg-gray-800',\n    inputBgFocus: 'focus:bg-gray-900',\n    inputBgHover: 'hover:bg-gray-900',\n    inputLabel: 'text-gray-500',\n    inputText: 'text-gray-100',\n    inputTextFocus: 'focus:text-white',\n    inputTextPlaceHolder: 'placeholder-gray-500',\n  },\n  'light': {\n    bg: 'bg-gray-100',\n    bgButtons: 'bg-gray-300',\n    bgNav: 'bg-gray-200',\n    border: 'border-gray-500',\n    borderFocus: 'focus:border-black',\n    title: 'text-black',\n    description: 'text-gray-700 ',\n    modeButtonText: 'text-gray-700',\n    modeButtonTextHover: 'hover:text-black',\n    resetButtonActive: 'active:bg-gray-700',\n    resetButtonBg: 'bg-gray-600',\n    resetButtonHover: 'hover:bg-gray-500',\n    resetButtonText: 'text-white',\n    twitterButtonActive: 'active:bg-blue-700',\n    twitterButtonBg: 'bg-blue-600',\n    twitterButtonHover: 'hover:bg-blue-500',\n    twitterButtonText: 'text-white',\n    inputBg: 'bg-gray-200',\n    inputBgFocus: 'focus:bg-gray-100',\n    inputBgHover: 'hover:bg-gray-100',\n    inputLabel: 'text-gray-500',\n    inputText: 'text-gray-900',\n    inputTextFocus: 'focus:text-black',\n    inputTextPlaceHolder: 'placeholder-gray-500',\n  }\n}\n\nfunction openColorPicker(ref) {\n  const e = new MouseEvent('click', { view: window, bubbles: true, cancleable: true })\n  ref.dispatchEvent(e)\n}\n\nfunction App() {\n  const [mode, setMode] = useDarkMode()\n  const colors = themes[mode]\n  const [outerColor, setOuterColor] = useQueryParam('outer-color', initialOuterColor) // TODO: use query param\n  const innerColor = (mode === 'dark') ? 'rgba(255, 255, 255, 0.03)' : 'rgba(0, 0, 0, 0.03)'\n  const [arrowColor, setArrowColor] = useQueryParam('arrow-color', initialArrowColor) // TODO: use query param\n  const logoRef = useRef()\n  const outerColorRef = useRef()\n  const arrowColorRef = useRef()\n  const [windowX, windowY] = useMousePosition()\n  useWindowSize() // triggeres recalculation if logo size changes\n  const rad = calculateAngle(logoRef, windowX, windowY)\n  const signum = (mode === 'dark') ? 1 : -1\n  const rightShade = calculateShade(signum * rad, Math.PI / 3)\n  const leftShade = calculateShade(signum * rad, -Math.PI / 3)\n  const editOuterColor = () => openColorPicker(outerColorRef.current)\n  const editArrowColor = () => openColorPicker(arrowColorRef.current)\n  return (\n    <div className=\"min-h-screen flex\">\n      <main className={[\"flex flex-col justify-center w-full\", colors.bg].join(' ')}>\n        <Logo ref={logoRef} height='100%' outerColor={outerColor} innerColor={innerColor} arrowColor={arrowColor} leftShade={leftShade} rightShade={rightShade} onOuterColor={editOuterColor} onArrowColor={editArrowColor} />\n      </main>\n      <div className={[\"relative max-w-sm w-full md:w-72 flex flex-col flex-shrink-0 z-40\", colors.bgNav].join(' ')}>\n        <div className=\"absolute top-0 right-0 m-1\">\n          <button onClick={() => setMode(mode === 'dark' ? 'light' : 'dark')} className=\"relative flex items-center justify-center h-12 w-12 rounded-full focus:outline-none focus:bg-gray-600\" aria-label=\"Close sidebar\">\n            <div className={[\"absolute top-0 right-0 transform transition-all ease-in-out duration-500 sm:duration-700\", (mode === 'dark' ? 'opacity-100' : 'opacity-0')].join(' ')}>\n              <svg className={[\"h-6 w-6 transition-opacity ease-in-out duration-500 sm:duration-700\", (mode === 'dark' ? 'opacity-100 rotate-0' : 'opacity-0 rotate-180'), colors.modeButtonText, colors.modeButtonTextHover].join(' ')} stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n              </svg>\n            </div>\n            <div className={[\"absolute top-0 right-0 transform transition-all ease-in-out duration-500 sm:duration-700\", (mode === 'dark' ? 'opacity-0 rotate-180' : 'opacity-100 rotate-0')].join(' ')}>\n              <svg className={[\"h-6 w-6\", colors.modeButtonText, colors.modeButtonTextHover].join(' ')} stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n              </svg>\n            </div>\n          </button>\n        </div>\n        <div className=\"flex-1 h-0 overflow-auto\">\n          <div className={[\"flex-shrink-0 flex flex-col px-4 py-5\", colors.bgNav].join(' ')}>\n            <div className=\"flex items-center\">\n              <svg className={[\"mr-3 h-6 w-6\", colors.title].join(' ')} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\n              </svg>\n              <div className={[\"font-bold text-xl\", colors.title].join(' ')}>Beauty Challenge</div>\n            </div>\n            <div className={[\"pt-2\", colors.description].join(' ')}>Choose your favorite logo color combination and share it with us!</div>\n          </div>\n          <aside className=\"px-4 space-y-4\">\n            <div className={[\"landscape:hidden w-full p-2 rounded-md overflow-hidden border\", colors.border, colors.bg].join(' ')}>\n              <Logo height='100' outerColor={outerColor} innerColor={innerColor} arrowColor={arrowColor} leftShade={leftShade} rightShade={rightShade} onOuterColor={editOuterColor} onArrowColor={editArrowColor} />\n            </div>\n            {[\n                { ref: outerColorRef, label: 'Outer color', color: outerColor, setColor: setOuterColor },\n                { ref: arrowColorRef, label: 'Arrow color', color: arrowColor, setColor: setArrowColor },\n            ].map(props => <ColorPicker key={props.label} {...props} colors={colors} />)}\n          </aside>\n        </div>\n        <div className={[\"flex flex-row-reverse p-4 z-10\", colors.bgButtons].join(' ')}>\n          <div className=\"flex items-center mx-auto\">\n            <div className=\"rounded-md shadow-sm mx-2\">\n              <button onClick={(e) => { setOuterColor(initialOuterColor); setArrowColor(initialArrowColor) }} type=\"button\" className={[\"inline-flex items-center px-4 py-2 md:py-1 border border-transparent text-base leading-6 font-medium rounded-md focus:outline-none focus:border-none focus:shadow-outline-none transition ease-in-out duration-150\",  colors.resetButtonText, colors.resetButtonBg, colors.resetButtonHover, colors.resetButtonActive].join(' ')}>\n                <svg className=\"-ml-1 mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n                Reset\n              </button>\n            </div>\n            <div className=\"rounded-md shadow-sm mx-2\">\n              <button onClick={() => tweet(outerColor, arrowColor)} type=\"button\" className={[\"inline-flex items-center px-4 py-2 md:py-1 border border-transparent text-base leading-6 font-medium rounded-md focus:outline-none focus:border-none focus:shadow-outline-none transition ease-in-out duration-150\", colors.twitterButtonText, colors.twitterButtonBg, colors.twitterButtonHover, colors.twitterButtonActive].join(' ')}>\n                <svg className=\"-ml-1 mr-3 h-5 w-5\" fill=\"currentColor\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\" />\n                </svg>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Entry point: mount president table to DOM\nReactDOM.render(<App />, document.getElementById('app'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}